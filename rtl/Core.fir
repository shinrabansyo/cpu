circuit Core :
  module Alu :
    input clock : Clock
    input reset : Reset
    output io : { flip command : UInt<8>, flip a : UInt<32>, flip b : UInt<32>, zero : UInt<1>, out : UInt<32>}

    node _io_zero_T = eq(io.out, UInt<32>("h0")) @[Alu.scala 17:22]
    io.zero <= _io_zero_T @[Alu.scala 17:11]
    node _io_out_T = eq(io.command, UInt<8>("h1")) @[Alu.scala 20:17]
    node _io_out_T_1 = add(io.a, io.b) @[Alu.scala 20:40]
    node _io_out_T_2 = tail(_io_out_T_1, 1) @[Alu.scala 20:40]
    node _io_out_T_3 = eq(io.command, UInt<8>("h2")) @[Alu.scala 21:17]
    node _io_out_T_4 = sub(io.a, io.b) @[Alu.scala 21:40]
    node _io_out_T_5 = tail(_io_out_T_4, 1) @[Alu.scala 21:40]
    node _io_out_T_6 = mux(_io_out_T_3, _io_out_T_5, UInt<32>("h0")) @[Mux.scala 101:16]
    node _io_out_T_7 = mux(_io_out_T, _io_out_T_2, _io_out_T_6) @[Mux.scala 101:16]
    io.out <= _io_out_T_7 @[Alu.scala 19:10]

  module UartTx :
    input clock : Clock
    input reset : Reset
    output io : { tx : UInt<1>, flip din : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>}}

    reg rateCounter : UInt<8>, clock with :
      reset => (reset, UInt<8>("h0")) @[Uart.scala 26:28]
    reg bitCounter : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[Uart.scala 27:28]
    reg bits : UInt<1>[10], clock with :
      reset => (UInt<1>("h0"), bits) @[Uart.scala 28:24]
    node _io_tx_T = eq(bitCounter, UInt<1>("h0")) @[Uart.scala 30:23]
    node _io_tx_T_1 = or(_io_tx_T, bits[0]) @[Uart.scala 30:31]
    io.tx <= _io_tx_T_1 @[Uart.scala 30:9]
    node ready = eq(bitCounter, UInt<1>("h0")) @[Uart.scala 31:26]
    io.din.ready <= ready @[Uart.scala 32:16]
    node _T = and(ready, io.din.valid) @[Uart.scala 38:14]
    when _T : @[Uart.scala 38:31]
      node hi = cat(UInt<1>("h1"), io.din.bits) @[Cat.scala 33:92]
      node _T_1 = cat(hi, UInt<1>("h0")) @[Cat.scala 33:92]
      node _T_2 = bits(_T_1, 0, 0) @[Uart.scala 39:40]
      node _T_3 = bits(_T_1, 1, 1) @[Uart.scala 39:40]
      node _T_4 = bits(_T_1, 2, 2) @[Uart.scala 39:40]
      node _T_5 = bits(_T_1, 3, 3) @[Uart.scala 39:40]
      node _T_6 = bits(_T_1, 4, 4) @[Uart.scala 39:40]
      node _T_7 = bits(_T_1, 5, 5) @[Uart.scala 39:40]
      node _T_8 = bits(_T_1, 6, 6) @[Uart.scala 39:40]
      node _T_9 = bits(_T_1, 7, 7) @[Uart.scala 39:40]
      node _T_10 = bits(_T_1, 8, 8) @[Uart.scala 39:40]
      node _T_11 = bits(_T_1, 9, 9) @[Uart.scala 39:40]
      bits[0] <= _T_2 @[Uart.scala 39:10]
      bits[1] <= _T_3 @[Uart.scala 39:10]
      bits[2] <= _T_4 @[Uart.scala 39:10]
      bits[3] <= _T_5 @[Uart.scala 39:10]
      bits[4] <= _T_6 @[Uart.scala 39:10]
      bits[5] <= _T_7 @[Uart.scala 39:10]
      bits[6] <= _T_8 @[Uart.scala 39:10]
      bits[7] <= _T_9 @[Uart.scala 39:10]
      bits[8] <= _T_10 @[Uart.scala 39:10]
      bits[9] <= _T_11 @[Uart.scala 39:10]
      bitCounter <= UInt<4>("ha") @[Uart.scala 40:16]
      rateCounter <= UInt<8>("he9") @[Uart.scala 41:17]
    node _T_12 = gt(bitCounter, UInt<1>("h0")) @[Uart.scala 43:20]
    when _T_12 : @[Uart.scala 43:28]
      node _T_13 = eq(rateCounter, UInt<1>("h0")) @[Uart.scala 44:22]
      when _T_13 : @[Uart.scala 44:31]
        bits[0] <= bits[1] @[Uart.scala 47:37]
        bits[1] <= bits[2] @[Uart.scala 47:37]
        bits[2] <= bits[3] @[Uart.scala 47:37]
        bits[3] <= bits[4] @[Uart.scala 47:37]
        bits[4] <= bits[5] @[Uart.scala 47:37]
        bits[5] <= bits[6] @[Uart.scala 47:37]
        bits[6] <= bits[7] @[Uart.scala 47:37]
        bits[7] <= bits[8] @[Uart.scala 47:37]
        bits[8] <= bits[9] @[Uart.scala 47:37]
        node _bitCounter_T = sub(bitCounter, UInt<1>("h1")) @[Uart.scala 48:32]
        node _bitCounter_T_1 = tail(_bitCounter_T, 1) @[Uart.scala 48:32]
        bitCounter <= _bitCounter_T_1 @[Uart.scala 48:18]
        rateCounter <= UInt<8>("he9") @[Uart.scala 49:19]
      else :
        node _rateCounter_T = sub(rateCounter, UInt<1>("h1")) @[Uart.scala 51:34]
        node _rateCounter_T_1 = tail(_rateCounter_T, 1) @[Uart.scala 51:34]
        rateCounter <= _rateCounter_T_1 @[Uart.scala 51:19]


  module UartRx :
    input clock : Clock
    input reset : Reset
    output io : { dout : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>}, flip rx : UInt<1>, overrun : UInt<1>}

    reg rateCounter : UInt<9>, clock with :
      reset => (reset, UInt<9>("h0")) @[Uart.scala 63:28]
    reg bitCounter : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[Uart.scala 65:27]
    reg bits : UInt<1>[10], clock with :
      reset => (UInt<1>("h0"), bits) @[Uart.scala 66:17]
    wire _rxRegs_WIRE : UInt<1>[3] @[Uart.scala 68:31]
    _rxRegs_WIRE[0] <= UInt<1>("h0") @[Uart.scala 68:31]
    _rxRegs_WIRE[1] <= UInt<1>("h0") @[Uart.scala 68:31]
    _rxRegs_WIRE[2] <= UInt<1>("h0") @[Uart.scala 68:31]
    reg rxRegs : UInt<1>[3], clock with :
      reset => (reset, _rxRegs_WIRE) @[Uart.scala 68:23]
    reg overrun : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Uart.scala 72:24]
    reg running : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Uart.scala 73:24]
    reg outValid : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[Uart.scala 76:25]
    reg outBits : UInt<8>, clock with :
      reset => (UInt<1>("h0"), outBits) @[Uart.scala 77:20]
    wire outReady : UInt<1> @[Uart.scala 78:29]
    outReady <= io.dout.ready @[Uart.scala 78:29]
    io.dout.valid <= outValid @[Uart.scala 79:17]
    io.dout.bits <= outBits @[Uart.scala 80:16]
    node _T = and(outValid, outReady) @[Uart.scala 83:17]
    when _T : @[Uart.scala 83:30]
      outValid <= UInt<1>("h0") @[Uart.scala 84:14]
    rxRegs[2] <= io.rx @[Uart.scala 97:24]
    rxRegs[0] <= rxRegs[1] @[Uart.scala 98:50]
    rxRegs[1] <= rxRegs[2] @[Uart.scala 98:50]
    io.overrun <= overrun @[Uart.scala 104:14]
    node _T_1 = eq(running, UInt<1>("h0")) @[Uart.scala 107:8]
    when _T_1 : @[Uart.scala 107:18]
      node _T_2 = eq(rxRegs[1], UInt<1>("h0")) @[Uart.scala 108:10]
      node _T_3 = and(_T_2, rxRegs[0]) @[Uart.scala 108:21]
      when _T_3 : @[Uart.scala 108:35]
        rateCounter <= UInt<9>("h15e") @[Uart.scala 110:19]
        bitCounter <= UInt<4>("h9") @[Uart.scala 111:18]
        running <= UInt<1>("h1") @[Uart.scala 112:15]
    else :
      node _T_4 = eq(rateCounter, UInt<1>("h0")) @[Uart.scala 115:22]
      when _T_4 : @[Uart.scala 115:31]
        bits[9] <= rxRegs[0] @[Uart.scala 116:22]
        bits[0] <= bits[1] @[Uart.scala 117:45]
        bits[1] <= bits[2] @[Uart.scala 117:45]
        bits[2] <= bits[3] @[Uart.scala 117:45]
        bits[3] <= bits[4] @[Uart.scala 117:45]
        bits[4] <= bits[5] @[Uart.scala 117:45]
        bits[5] <= bits[6] @[Uart.scala 117:45]
        bits[6] <= bits[7] @[Uart.scala 117:45]
        bits[7] <= bits[8] @[Uart.scala 117:45]
        bits[8] <= bits[9] @[Uart.scala 117:45]
        node _T_5 = eq(bitCounter, UInt<1>("h0")) @[Uart.scala 119:23]
        when _T_5 : @[Uart.scala 119:32]
          outValid <= UInt<1>("h1") @[Uart.scala 120:18]
          node outBits_lo_lo = cat(bits[2], bits[1]) @[Cat.scala 33:92]
          node outBits_lo_hi = cat(bits[4], bits[3]) @[Cat.scala 33:92]
          node outBits_lo = cat(outBits_lo_hi, outBits_lo_lo) @[Cat.scala 33:92]
          node outBits_hi_lo = cat(bits[6], bits[5]) @[Cat.scala 33:92]
          node outBits_hi_hi = cat(bits[8], bits[7]) @[Cat.scala 33:92]
          node outBits_hi = cat(outBits_hi_hi, outBits_hi_lo) @[Cat.scala 33:92]
          node _outBits_T = cat(outBits_hi, outBits_lo) @[Cat.scala 33:92]
          outBits <= _outBits_T @[Uart.scala 121:17]
          overrun <= outValid @[Uart.scala 122:17]
          running <= UInt<1>("h0") @[Uart.scala 126:17]
        else :
          rateCounter <= UInt<8>("he9") @[Uart.scala 128:21]
          node _bitCounter_T = sub(bitCounter, UInt<1>("h1")) @[Uart.scala 129:34]
          node _bitCounter_T_1 = tail(_bitCounter_T, 1) @[Uart.scala 129:34]
          bitCounter <= _bitCounter_T_1 @[Uart.scala 129:20]
      else :
        node _rateCounter_T = sub(rateCounter, UInt<1>("h1")) @[Uart.scala 132:34]
        node _rateCounter_T_1 = tail(_rateCounter_T, 1) @[Uart.scala 132:34]
        rateCounter <= _rateCounter_T_1 @[Uart.scala 132:19]


  module IOBus :
    input clock : Clock
    input reset : Reset
    output io : { flip devId : UInt<32>, din : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>}, flip dout : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<8>}, tx : UInt<1>, flip rx : UInt<1>}

    inst uartTx of UartTx @[IOBus.scala 16:22]
    uartTx.clock <= clock
    uartTx.reset <= reset
    inst uartRx of UartRx @[IOBus.scala 17:22]
    uartRx.clock <= clock
    uartRx.reset <= reset
    wire isUart : UInt<1> @[IOBus.scala 19:20]
    node _isUart_T = eq(io.devId, UInt<1>("h0")) @[IOBus.scala 21:23]
    isUart <= _isUart_T @[IOBus.scala 21:10]
    uartRx.io.rx <= io.rx @[IOBus.scala 24:16]
    node _io_din_valid_T = mux(isUart, uartRx.io.dout.valid, UInt<1>("h1")) @[Mux.scala 101:16]
    io.din.valid <= _io_din_valid_T @[IOBus.scala 26:16]
    node _io_din_bits_T = mux(isUart, uartRx.io.dout.bits, UInt<1>("h0")) @[Mux.scala 101:16]
    io.din.bits <= _io_din_bits_T @[IOBus.scala 29:15]
    uartRx.io.dout.ready <= UInt<1>("h0") @[IOBus.scala 34:24]
    when isUart : @[IOBus.scala 35:17]
      uartRx.io.dout.ready <= io.din.ready @[IOBus.scala 36:26]
    io.tx <= uartTx.io.tx @[IOBus.scala 42:9]
    uartTx.io.din.valid <= UInt<1>("h0") @[IOBus.scala 44:23]
    uartTx.io.din.bits <= UInt<1>("h0") @[IOBus.scala 45:22]
    when isUart : @[IOBus.scala 46:17]
      uartTx.io.din.valid <= io.dout.valid @[IOBus.scala 47:25]
      uartTx.io.din.bits <= io.dout.bits @[IOBus.scala 48:24]
    node _io_dout_ready_T = mux(isUart, uartTx.io.din.ready, UInt<1>("h1")) @[Mux.scala 101:16]
    io.dout.ready <= _io_dout_ready_T @[IOBus.scala 51:17]

  module Core :
    input clock : Clock
    input reset : UInt<1>
    output io : { tx : UInt<1>, flip rx : UInt<1>}

    inst alu of Alu @[Core.scala 13:19]
    alu.clock <= clock
    alu.reset <= reset
    inst ioBus of IOBus @[Core.scala 14:21]
    ioBus.clock <= clock
    ioBus.reset <= reset
    ioBus.io.rx <= io.rx @[Core.scala 16:15]
    io.tx <= ioBus.io.tx @[Core.scala 17:9]
    cmem imem : UInt<8> [6144] @[Core.scala 19:24]
    cmem dmem : UInt<8> [4096] @[Core.scala 21:24]
    reg pc : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 24:28]
    reg pc_fetching : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[Core.scala 25:28]
    cmem regfile : UInt<32> [32] @[Core.scala 26:24]
    reg instr : UInt<48>, clock with :
      reset => (reset, UInt<48>("h0")) @[Core.scala 28:28]
    wire opcode : UInt<5> @[Core.scala 29:25]
    wire opcode_sub : UInt<3> @[Core.scala 30:25]
    wire rd : UInt<5> @[Core.scala 31:25]
    wire rs1 : UInt<5> @[Core.scala 32:25]
    wire rs1_i : UInt<5> @[Core.scala 33:25]
    wire rs1_s : UInt<5> @[Core.scala 34:25]
    wire rs2 : UInt<5> @[Core.scala 35:25]
    wire rs2_s : UInt<5> @[Core.scala 36:25]
    wire imm : UInt<32> @[Core.scala 37:25]
    wire imm_r : UInt<25> @[Core.scala 38:25]
    wire imm_r_sext : UInt<32> @[Core.scala 39:25]
    wire dmem_raw : UInt<32> @[Core.scala 41:25]
    node _pc_T = eq(opcode, UInt<5>("h6")) @[Core.scala 46:13]
    node _pc_T_1 = eq(opcode_sub, UInt<3>("h0")) @[Core.scala 46:40]
    node _pc_T_2 = and(_pc_T, _pc_T_1) @[Core.scala 46:26]
    node _pc_T_3 = eq(ioBus.io.din.valid, UInt<1>("h0")) @[Core.scala 46:56]
    node _pc_T_4 = and(_pc_T_2, _pc_T_3) @[Core.scala 46:53]
    node _pc_T_5 = eq(opcode, UInt<5>("h6")) @[Core.scala 48:13]
    node _pc_T_6 = eq(opcode_sub, UInt<3>("h1")) @[Core.scala 48:40]
    node _pc_T_7 = and(_pc_T_5, _pc_T_6) @[Core.scala 48:26]
    node _pc_T_8 = eq(ioBus.io.dout.ready, UInt<1>("h0")) @[Core.scala 48:56]
    node _pc_T_9 = and(_pc_T_7, _pc_T_8) @[Core.scala 48:53]
    node _pc_T_10 = mux(_pc_T_9, pc, pc_fetching) @[Mux.scala 101:16]
    node _pc_T_11 = mux(_pc_T_4, pc, _pc_T_10) @[Mux.scala 101:16]
    pc <= _pc_T_11 @[Core.scala 44:6]
    node _instr_T = add(pc_fetching, UInt<1>("h0")) @[Core.scala 50:67]
    node _instr_T_1 = tail(_instr_T, 1) @[Core.scala 50:67]
    node _instr_T_2 = bits(_instr_T_1, 12, 0) @[Core.scala 50:54]
    read mport instr_MPORT = imem[_instr_T_2], clock @[Core.scala 50:54]
    node _instr_T_3 = add(pc_fetching, UInt<1>("h1")) @[Core.scala 50:67]
    node _instr_T_4 = tail(_instr_T_3, 1) @[Core.scala 50:67]
    node _instr_T_5 = bits(_instr_T_4, 12, 0) @[Core.scala 50:54]
    read mport instr_MPORT_1 = imem[_instr_T_5], clock @[Core.scala 50:54]
    node _instr_T_6 = add(pc_fetching, UInt<2>("h2")) @[Core.scala 50:67]
    node _instr_T_7 = tail(_instr_T_6, 1) @[Core.scala 50:67]
    node _instr_T_8 = bits(_instr_T_7, 12, 0) @[Core.scala 50:54]
    read mport instr_MPORT_2 = imem[_instr_T_8], clock @[Core.scala 50:54]
    node _instr_T_9 = add(pc_fetching, UInt<2>("h3")) @[Core.scala 50:67]
    node _instr_T_10 = tail(_instr_T_9, 1) @[Core.scala 50:67]
    node _instr_T_11 = bits(_instr_T_10, 12, 0) @[Core.scala 50:54]
    read mport instr_MPORT_3 = imem[_instr_T_11], clock @[Core.scala 50:54]
    node _instr_T_12 = add(pc_fetching, UInt<3>("h4")) @[Core.scala 50:67]
    node _instr_T_13 = tail(_instr_T_12, 1) @[Core.scala 50:67]
    node _instr_T_14 = bits(_instr_T_13, 12, 0) @[Core.scala 50:54]
    read mport instr_MPORT_4 = imem[_instr_T_14], clock @[Core.scala 50:54]
    node _instr_T_15 = add(pc_fetching, UInt<3>("h5")) @[Core.scala 50:67]
    node _instr_T_16 = tail(_instr_T_15, 1) @[Core.scala 50:67]
    node _instr_T_17 = bits(_instr_T_16, 12, 0) @[Core.scala 50:54]
    read mport instr_MPORT_5 = imem[_instr_T_17], clock @[Core.scala 50:54]
    node instr_lo_hi = cat(instr_MPORT_2, instr_MPORT_1) @[Cat.scala 33:92]
    node instr_lo = cat(instr_lo_hi, instr_MPORT) @[Cat.scala 33:92]
    node instr_hi_hi = cat(instr_MPORT_5, instr_MPORT_4) @[Cat.scala 33:92]
    node instr_hi = cat(instr_hi_hi, instr_MPORT_3) @[Cat.scala 33:92]
    node _instr_T_18 = cat(instr_hi, instr_lo) @[Cat.scala 33:92]
    node _instr_T_19 = eq(opcode, UInt<5>("h3")) @[Core.scala 52:13]
    node _instr_T_20 = eq(opcode, UInt<5>("h6")) @[Core.scala 54:13]
    node _instr_T_21 = eq(opcode_sub, UInt<3>("h0")) @[Core.scala 54:40]
    node _instr_T_22 = and(_instr_T_20, _instr_T_21) @[Core.scala 54:26]
    node _instr_T_23 = eq(ioBus.io.din.valid, UInt<1>("h0")) @[Core.scala 54:56]
    node _instr_T_24 = and(_instr_T_22, _instr_T_23) @[Core.scala 54:53]
    node _instr_T_25 = eq(opcode, UInt<5>("h6")) @[Core.scala 56:13]
    node _instr_T_26 = eq(opcode_sub, UInt<3>("h1")) @[Core.scala 56:40]
    node _instr_T_27 = and(_instr_T_25, _instr_T_26) @[Core.scala 56:26]
    node _instr_T_28 = eq(ioBus.io.dout.ready, UInt<1>("h0")) @[Core.scala 56:56]
    node _instr_T_29 = and(_instr_T_27, _instr_T_28) @[Core.scala 56:53]
    node _instr_T_30 = mux(_instr_T_29, instr, _instr_T_18) @[Mux.scala 101:16]
    node _instr_T_31 = mux(_instr_T_24, instr, _instr_T_30) @[Mux.scala 101:16]
    node _instr_T_32 = mux(_instr_T_19, UInt<48>("h0"), _instr_T_31) @[Mux.scala 101:16]
    instr <= _instr_T_32 @[Core.scala 50:9]
    node _pc_fetching_T = add(pc_fetching, UInt<3>("h6")) @[Core.scala 59:39]
    node _pc_fetching_T_1 = tail(_pc_fetching_T, 1) @[Core.scala 59:39]
    node _pc_fetching_T_2 = eq(opcode, UInt<5>("h3")) @[Core.scala 60:13]
    node _pc_fetching_T_3 = eq(opcode_sub, UInt<3>("h0")) @[Core.scala 60:40]
    node _pc_fetching_T_4 = and(_pc_fetching_T_2, _pc_fetching_T_3) @[Core.scala 60:26]
    node _pc_fetching_T_5 = eq(alu.io.zero, UInt<1>("h1")) @[Core.scala 60:68]
    node _pc_fetching_T_6 = and(_pc_fetching_T_4, _pc_fetching_T_5) @[Core.scala 60:53]
    node _pc_fetching_T_7 = add(pc, imm_r_sext) @[Core.scala 60:88]
    node _pc_fetching_T_8 = tail(_pc_fetching_T_7, 1) @[Core.scala 60:88]
    node _pc_fetching_T_9 = eq(opcode, UInt<5>("h3")) @[Core.scala 61:13]
    node _pc_fetching_T_10 = eq(opcode_sub, UInt<3>("h1")) @[Core.scala 61:40]
    node _pc_fetching_T_11 = and(_pc_fetching_T_9, _pc_fetching_T_10) @[Core.scala 61:26]
    node _pc_fetching_T_12 = eq(alu.io.zero, UInt<1>("h0")) @[Core.scala 61:68]
    node _pc_fetching_T_13 = and(_pc_fetching_T_11, _pc_fetching_T_12) @[Core.scala 61:53]
    node _pc_fetching_T_14 = add(pc, imm_r_sext) @[Core.scala 61:88]
    node _pc_fetching_T_15 = tail(_pc_fetching_T_14, 1) @[Core.scala 61:88]
    node _pc_fetching_T_16 = eq(opcode, UInt<5>("h3")) @[Core.scala 62:13]
    node _pc_fetching_T_17 = eq(opcode_sub, UInt<3>("h3")) @[Core.scala 62:40]
    node _pc_fetching_T_18 = and(_pc_fetching_T_16, _pc_fetching_T_17) @[Core.scala 62:26]
    node _pc_fetching_T_19 = bits(alu.io.out, 31, 31) @[Core.scala 62:67]
    node _pc_fetching_T_20 = eq(_pc_fetching_T_19, UInt<1>("h1")) @[Core.scala 62:72]
    node _pc_fetching_T_21 = eq(alu.io.zero, UInt<1>("h1")) @[Core.scala 62:100]
    node _pc_fetching_T_22 = or(_pc_fetching_T_20, _pc_fetching_T_21) @[Core.scala 62:85]
    node _pc_fetching_T_23 = and(_pc_fetching_T_18, _pc_fetching_T_22) @[Core.scala 62:53]
    node _pc_fetching_T_24 = add(pc, imm_r_sext) @[Core.scala 62:120]
    node _pc_fetching_T_25 = tail(_pc_fetching_T_24, 1) @[Core.scala 62:120]
    node _pc_fetching_T_26 = eq(opcode, UInt<5>("h3")) @[Core.scala 63:13]
    node _pc_fetching_T_27 = eq(opcode_sub, UInt<3>("h2")) @[Core.scala 63:40]
    node _pc_fetching_T_28 = and(_pc_fetching_T_26, _pc_fetching_T_27) @[Core.scala 63:26]
    node _pc_fetching_T_29 = bits(alu.io.out, 31, 31) @[Core.scala 63:66]
    node _pc_fetching_T_30 = eq(_pc_fetching_T_29, UInt<1>("h1")) @[Core.scala 63:71]
    node _pc_fetching_T_31 = and(_pc_fetching_T_28, _pc_fetching_T_30) @[Core.scala 63:53]
    node _pc_fetching_T_32 = add(pc, imm_r_sext) @[Core.scala 63:93]
    node _pc_fetching_T_33 = tail(_pc_fetching_T_32, 1) @[Core.scala 63:93]
    node _pc_fetching_T_34 = eq(opcode, UInt<5>("h6")) @[Core.scala 65:13]
    node _pc_fetching_T_35 = eq(opcode_sub, UInt<3>("h0")) @[Core.scala 65:40]
    node _pc_fetching_T_36 = and(_pc_fetching_T_34, _pc_fetching_T_35) @[Core.scala 65:26]
    node _pc_fetching_T_37 = eq(ioBus.io.din.valid, UInt<1>("h0")) @[Core.scala 65:56]
    node _pc_fetching_T_38 = and(_pc_fetching_T_36, _pc_fetching_T_37) @[Core.scala 65:53]
    node _pc_fetching_T_39 = eq(opcode, UInt<5>("h6")) @[Core.scala 66:13]
    node _pc_fetching_T_40 = eq(opcode_sub, UInt<3>("h1")) @[Core.scala 66:40]
    node _pc_fetching_T_41 = and(_pc_fetching_T_39, _pc_fetching_T_40) @[Core.scala 66:26]
    node _pc_fetching_T_42 = eq(ioBus.io.dout.ready, UInt<1>("h0")) @[Core.scala 66:56]
    node _pc_fetching_T_43 = and(_pc_fetching_T_41, _pc_fetching_T_42) @[Core.scala 66:53]
    node _pc_fetching_T_44 = mux(_pc_fetching_T_43, pc_fetching, _pc_fetching_T_1) @[Mux.scala 101:16]
    node _pc_fetching_T_45 = mux(_pc_fetching_T_38, pc_fetching, _pc_fetching_T_44) @[Mux.scala 101:16]
    node _pc_fetching_T_46 = mux(_pc_fetching_T_31, _pc_fetching_T_33, _pc_fetching_T_45) @[Mux.scala 101:16]
    node _pc_fetching_T_47 = mux(_pc_fetching_T_23, _pc_fetching_T_25, _pc_fetching_T_46) @[Mux.scala 101:16]
    node _pc_fetching_T_48 = mux(_pc_fetching_T_13, _pc_fetching_T_15, _pc_fetching_T_47) @[Mux.scala 101:16]
    node _pc_fetching_T_49 = mux(_pc_fetching_T_6, _pc_fetching_T_8, _pc_fetching_T_48) @[Mux.scala 101:16]
    pc_fetching <= _pc_fetching_T_49 @[Core.scala 59:15]
    wire command : UInt<8> @[Core.scala 70:24]
    node _opcode_T = bits(instr, 4, 0) @[Core.scala 72:22]
    opcode <= _opcode_T @[Core.scala 72:14]
    node _opcode_sub_T = bits(instr, 7, 5) @[Core.scala 73:22]
    opcode_sub <= _opcode_sub_T @[Core.scala 73:14]
    node _rd_T = bits(instr, 12, 8) @[Core.scala 74:22]
    rd <= _rd_T @[Core.scala 74:14]
    node _rs1_T = bits(instr, 17, 13) @[Core.scala 75:22]
    rs1 <= _rs1_T @[Core.scala 75:14]
    node _rs1_i_T = bits(instr, 15, 13) @[Core.scala 76:36]
    node _rs1_i_T_1 = cat(UInt<2>("h0"), _rs1_i_T) @[Cat.scala 33:92]
    rs1_i <= _rs1_i_T_1 @[Core.scala 76:14]
    node _rs1_s_T = bits(instr, 15, 13) @[Core.scala 77:36]
    node _rs1_s_T_1 = cat(UInt<2>("h0"), _rs1_s_T) @[Cat.scala 33:92]
    rs1_s <= _rs1_s_T_1 @[Core.scala 77:14]
    node _rs2_T = bits(instr, 22, 18) @[Core.scala 78:22]
    rs2 <= _rs2_T @[Core.scala 78:14]
    node _rs2_s_T = bits(instr, 12, 8) @[Core.scala 79:22]
    rs2_s <= _rs2_s_T @[Core.scala 79:14]
    node _imm_T = bits(instr, 47, 16) @[Core.scala 80:22]
    imm <= _imm_T @[Core.scala 80:14]
    node _imm_r_T = bits(instr, 47, 23) @[Core.scala 81:22]
    imm_r <= _imm_r_T @[Core.scala 81:14]
    node _imm_r_sext_T = bits(imm_r, 24, 24) @[Core.scala 82:34]
    node _imm_r_sext_T_1 = bits(_imm_r_sext_T, 0, 0) @[Bitwise.scala 77:15]
    node _imm_r_sext_T_2 = mux(_imm_r_sext_T_1, UInt<7>("h7f"), UInt<7>("h0")) @[Bitwise.scala 77:12]
    node _imm_r_sext_T_3 = cat(_imm_r_sext_T_2, imm_r) @[Cat.scala 33:92]
    imm_r_sext <= _imm_r_sext_T_3 @[Core.scala 82:14]
    node _command_T = eq(opcode, UInt<5>("h1")) @[Core.scala 87:13]
    node _command_T_1 = eq(opcode_sub, UInt<3>("h1")) @[Core.scala 87:40]
    node _command_T_2 = and(_command_T, _command_T_1) @[Core.scala 87:26]
    node _command_T_3 = eq(opcode, UInt<5>("h1")) @[Core.scala 88:13]
    node _command_T_4 = eq(opcode_sub, UInt<3>("h2")) @[Core.scala 88:40]
    node _command_T_5 = and(_command_T_3, _command_T_4) @[Core.scala 88:26]
    node _command_T_6 = eq(opcode, UInt<5>("h2")) @[Core.scala 90:13]
    node _command_T_7 = eq(opcode_sub, UInt<3>("h1")) @[Core.scala 90:40]
    node _command_T_8 = and(_command_T_6, _command_T_7) @[Core.scala 90:26]
    node _command_T_9 = eq(opcode, UInt<5>("h2")) @[Core.scala 91:13]
    node _command_T_10 = eq(opcode_sub, UInt<3>("h2")) @[Core.scala 91:40]
    node _command_T_11 = and(_command_T_9, _command_T_10) @[Core.scala 91:26]
    node _command_T_12 = eq(opcode, UInt<5>("h3")) @[Core.scala 93:13]
    node _command_T_13 = eq(opcode_sub, UInt<3>("h0")) @[Core.scala 93:40]
    node _command_T_14 = and(_command_T_12, _command_T_13) @[Core.scala 93:26]
    node _command_T_15 = eq(opcode, UInt<5>("h3")) @[Core.scala 94:13]
    node _command_T_16 = eq(opcode_sub, UInt<3>("h1")) @[Core.scala 94:40]
    node _command_T_17 = and(_command_T_15, _command_T_16) @[Core.scala 94:26]
    node _command_T_18 = eq(opcode, UInt<5>("h3")) @[Core.scala 95:13]
    node _command_T_19 = eq(opcode_sub, UInt<3>("h2")) @[Core.scala 95:40]
    node _command_T_20 = and(_command_T_18, _command_T_19) @[Core.scala 95:26]
    node _command_T_21 = eq(opcode, UInt<5>("h3")) @[Core.scala 96:13]
    node _command_T_22 = eq(opcode_sub, UInt<3>("h3")) @[Core.scala 96:40]
    node _command_T_23 = and(_command_T_21, _command_T_22) @[Core.scala 96:26]
    node _command_T_24 = eq(opcode, UInt<5>("h4")) @[Core.scala 98:13]
    node _command_T_25 = eq(opcode_sub, UInt<3>("h0")) @[Core.scala 98:40]
    node _command_T_26 = and(_command_T_24, _command_T_25) @[Core.scala 98:26]
    node _command_T_27 = eq(opcode, UInt<5>("h5")) @[Core.scala 100:13]
    node _command_T_28 = eq(opcode_sub, UInt<3>("h0")) @[Core.scala 100:40]
    node _command_T_29 = and(_command_T_27, _command_T_28) @[Core.scala 100:26]
    node _command_T_30 = eq(opcode, UInt<5>("h6")) @[Core.scala 102:13]
    node _command_T_31 = eq(opcode_sub, UInt<3>("h0")) @[Core.scala 102:40]
    node _command_T_32 = and(_command_T_30, _command_T_31) @[Core.scala 102:26]
    node _command_T_33 = eq(opcode, UInt<5>("h6")) @[Core.scala 103:13]
    node _command_T_34 = eq(opcode_sub, UInt<3>("h1")) @[Core.scala 103:40]
    node _command_T_35 = and(_command_T_33, _command_T_34) @[Core.scala 103:26]
    node _command_T_36 = mux(_command_T_35, UInt<8>("h1"), UInt<8>("h0")) @[Mux.scala 101:16]
    node _command_T_37 = mux(_command_T_32, UInt<8>("h1"), _command_T_36) @[Mux.scala 101:16]
    node _command_T_38 = mux(_command_T_29, UInt<8>("h1"), _command_T_37) @[Mux.scala 101:16]
    node _command_T_39 = mux(_command_T_26, UInt<8>("h1"), _command_T_38) @[Mux.scala 101:16]
    node _command_T_40 = mux(_command_T_23, UInt<8>("h2"), _command_T_39) @[Mux.scala 101:16]
    node _command_T_41 = mux(_command_T_20, UInt<8>("h2"), _command_T_40) @[Mux.scala 101:16]
    node _command_T_42 = mux(_command_T_17, UInt<8>("h2"), _command_T_41) @[Mux.scala 101:16]
    node _command_T_43 = mux(_command_T_14, UInt<8>("h2"), _command_T_42) @[Mux.scala 101:16]
    node _command_T_44 = mux(_command_T_11, UInt<8>("h2"), _command_T_43) @[Mux.scala 101:16]
    node _command_T_45 = mux(_command_T_8, UInt<8>("h1"), _command_T_44) @[Mux.scala 101:16]
    node _command_T_46 = mux(_command_T_5, UInt<8>("h2"), _command_T_45) @[Mux.scala 101:16]
    node _command_T_47 = mux(_command_T_2, UInt<8>("h1"), _command_T_46) @[Mux.scala 101:16]
    command <= _command_T_47 @[Core.scala 85:11]
    alu.io.command <= command @[Core.scala 107:18]
    infer mport alu_io_a_MPORT = regfile[rs1], clock @[Core.scala 108:36]
    node _alu_io_a_T = eq(opcode, UInt<5>("h2")) @[Core.scala 111:13]
    node _alu_io_a_T_1 = eq(opcode_sub, UInt<3>("h1")) @[Core.scala 111:40]
    node _alu_io_a_T_2 = and(_alu_io_a_T, _alu_io_a_T_1) @[Core.scala 111:26]
    infer mport alu_io_a_MPORT_1 = regfile[rs1_i], clock @[Core.scala 111:65]
    node _alu_io_a_T_3 = eq(opcode, UInt<5>("h2")) @[Core.scala 114:13]
    node _alu_io_a_T_4 = eq(opcode_sub, UInt<3>("h2")) @[Core.scala 114:40]
    node _alu_io_a_T_5 = and(_alu_io_a_T_3, _alu_io_a_T_4) @[Core.scala 114:26]
    infer mport alu_io_a_MPORT_2 = regfile[rs1_i], clock @[Core.scala 114:65]
    node _alu_io_a_T_6 = eq(opcode, UInt<5>("h4")) @[Core.scala 117:13]
    node _alu_io_a_T_7 = eq(opcode_sub, UInt<3>("h0")) @[Core.scala 117:40]
    node _alu_io_a_T_8 = and(_alu_io_a_T_6, _alu_io_a_T_7) @[Core.scala 117:26]
    infer mport alu_io_a_MPORT_3 = regfile[rs1_i], clock @[Core.scala 117:65]
    node _alu_io_a_T_9 = eq(opcode, UInt<5>("h5")) @[Core.scala 120:13]
    node _alu_io_a_T_10 = eq(opcode_sub, UInt<3>("h0")) @[Core.scala 120:40]
    node _alu_io_a_T_11 = and(_alu_io_a_T_9, _alu_io_a_T_10) @[Core.scala 120:26]
    infer mport alu_io_a_MPORT_4 = regfile[rs1_s], clock @[Core.scala 120:65]
    node _alu_io_a_T_12 = eq(opcode, UInt<5>("h6")) @[Core.scala 123:13]
    node _alu_io_a_T_13 = eq(opcode_sub, UInt<3>("h0")) @[Core.scala 123:40]
    node _alu_io_a_T_14 = and(_alu_io_a_T_12, _alu_io_a_T_13) @[Core.scala 123:26]
    infer mport alu_io_a_MPORT_5 = regfile[rs1_i], clock @[Core.scala 123:65]
    node _alu_io_a_T_15 = eq(opcode, UInt<5>("h6")) @[Core.scala 125:13]
    node _alu_io_a_T_16 = eq(opcode_sub, UInt<3>("h1")) @[Core.scala 125:40]
    node _alu_io_a_T_17 = and(_alu_io_a_T_15, _alu_io_a_T_16) @[Core.scala 125:26]
    infer mport alu_io_a_MPORT_6 = regfile[rs1_s], clock @[Core.scala 125:65]
    node _alu_io_a_T_18 = mux(_alu_io_a_T_17, alu_io_a_MPORT_6, alu_io_a_MPORT) @[Mux.scala 101:16]
    node _alu_io_a_T_19 = mux(_alu_io_a_T_14, alu_io_a_MPORT_5, _alu_io_a_T_18) @[Mux.scala 101:16]
    node _alu_io_a_T_20 = mux(_alu_io_a_T_11, alu_io_a_MPORT_4, _alu_io_a_T_19) @[Mux.scala 101:16]
    node _alu_io_a_T_21 = mux(_alu_io_a_T_8, alu_io_a_MPORT_3, _alu_io_a_T_20) @[Mux.scala 101:16]
    node _alu_io_a_T_22 = mux(_alu_io_a_T_5, alu_io_a_MPORT_2, _alu_io_a_T_21) @[Mux.scala 101:16]
    node _alu_io_a_T_23 = mux(_alu_io_a_T_2, alu_io_a_MPORT_1, _alu_io_a_T_22) @[Mux.scala 101:16]
    alu.io.a <= _alu_io_a_T_23 @[Core.scala 108:18]
    node _alu_io_b_T = eq(opcode, UInt<5>("h1")) @[Core.scala 129:13]
    node _alu_io_b_T_1 = eq(opcode_sub, UInt<3>("h1")) @[Core.scala 129:40]
    node _alu_io_b_T_2 = and(_alu_io_b_T, _alu_io_b_T_1) @[Core.scala 129:26]
    infer mport alu_io_b_MPORT = regfile[rs2], clock @[Core.scala 129:65]
    node _alu_io_b_T_3 = eq(opcode, UInt<5>("h1")) @[Core.scala 131:13]
    node _alu_io_b_T_4 = eq(opcode_sub, UInt<3>("h2")) @[Core.scala 131:40]
    node _alu_io_b_T_5 = and(_alu_io_b_T_3, _alu_io_b_T_4) @[Core.scala 131:26]
    infer mport alu_io_b_MPORT_1 = regfile[rs2], clock @[Core.scala 131:65]
    node _alu_io_b_T_6 = eq(opcode, UInt<5>("h2")) @[Core.scala 134:13]
    node _alu_io_b_T_7 = eq(opcode_sub, UInt<3>("h1")) @[Core.scala 134:40]
    node _alu_io_b_T_8 = and(_alu_io_b_T_6, _alu_io_b_T_7) @[Core.scala 134:26]
    node _alu_io_b_T_9 = eq(opcode, UInt<5>("h2")) @[Core.scala 136:13]
    node _alu_io_b_T_10 = eq(opcode_sub, UInt<3>("h2")) @[Core.scala 136:40]
    node _alu_io_b_T_11 = and(_alu_io_b_T_9, _alu_io_b_T_10) @[Core.scala 136:26]
    node _alu_io_b_T_12 = eq(opcode, UInt<5>("h3")) @[Core.scala 139:13]
    node _alu_io_b_T_13 = eq(opcode_sub, UInt<3>("h0")) @[Core.scala 139:40]
    node _alu_io_b_T_14 = and(_alu_io_b_T_12, _alu_io_b_T_13) @[Core.scala 139:26]
    infer mport alu_io_b_MPORT_2 = regfile[rs2], clock @[Core.scala 139:65]
    node _alu_io_b_T_15 = eq(opcode, UInt<5>("h3")) @[Core.scala 141:13]
    node _alu_io_b_T_16 = eq(opcode_sub, UInt<3>("h1")) @[Core.scala 141:40]
    node _alu_io_b_T_17 = and(_alu_io_b_T_15, _alu_io_b_T_16) @[Core.scala 141:26]
    infer mport alu_io_b_MPORT_3 = regfile[rs2], clock @[Core.scala 141:65]
    node _alu_io_b_T_18 = eq(opcode, UInt<5>("h3")) @[Core.scala 143:13]
    node _alu_io_b_T_19 = eq(opcode_sub, UInt<3>("h2")) @[Core.scala 143:40]
    node _alu_io_b_T_20 = and(_alu_io_b_T_18, _alu_io_b_T_19) @[Core.scala 143:26]
    infer mport alu_io_b_MPORT_4 = regfile[rs2], clock @[Core.scala 143:65]
    node _alu_io_b_T_21 = eq(opcode, UInt<5>("h3")) @[Core.scala 145:13]
    node _alu_io_b_T_22 = eq(opcode_sub, UInt<3>("h3")) @[Core.scala 145:40]
    node _alu_io_b_T_23 = and(_alu_io_b_T_21, _alu_io_b_T_22) @[Core.scala 145:26]
    infer mport alu_io_b_MPORT_5 = regfile[rs2], clock @[Core.scala 145:65]
    node _alu_io_b_T_24 = eq(opcode, UInt<5>("h4")) @[Core.scala 148:13]
    node _alu_io_b_T_25 = eq(opcode_sub, UInt<3>("h0")) @[Core.scala 148:40]
    node _alu_io_b_T_26 = and(_alu_io_b_T_24, _alu_io_b_T_25) @[Core.scala 148:26]
    node _alu_io_b_T_27 = eq(opcode, UInt<5>("h5")) @[Core.scala 151:13]
    node _alu_io_b_T_28 = eq(opcode_sub, UInt<3>("h0")) @[Core.scala 151:40]
    node _alu_io_b_T_29 = and(_alu_io_b_T_27, _alu_io_b_T_28) @[Core.scala 151:26]
    node _alu_io_b_T_30 = eq(opcode, UInt<5>("h6")) @[Core.scala 154:13]
    node _alu_io_b_T_31 = eq(opcode_sub, UInt<3>("h0")) @[Core.scala 154:40]
    node _alu_io_b_T_32 = and(_alu_io_b_T_30, _alu_io_b_T_31) @[Core.scala 154:26]
    node _alu_io_b_T_33 = eq(opcode, UInt<5>("h6")) @[Core.scala 156:13]
    node _alu_io_b_T_34 = eq(opcode_sub, UInt<3>("h1")) @[Core.scala 156:40]
    node _alu_io_b_T_35 = and(_alu_io_b_T_33, _alu_io_b_T_34) @[Core.scala 156:26]
    node _alu_io_b_T_36 = mux(_alu_io_b_T_35, imm, UInt<32>("h0")) @[Mux.scala 101:16]
    node _alu_io_b_T_37 = mux(_alu_io_b_T_32, imm, _alu_io_b_T_36) @[Mux.scala 101:16]
    node _alu_io_b_T_38 = mux(_alu_io_b_T_29, imm, _alu_io_b_T_37) @[Mux.scala 101:16]
    node _alu_io_b_T_39 = mux(_alu_io_b_T_26, imm, _alu_io_b_T_38) @[Mux.scala 101:16]
    node _alu_io_b_T_40 = mux(_alu_io_b_T_23, alu_io_b_MPORT_5, _alu_io_b_T_39) @[Mux.scala 101:16]
    node _alu_io_b_T_41 = mux(_alu_io_b_T_20, alu_io_b_MPORT_4, _alu_io_b_T_40) @[Mux.scala 101:16]
    node _alu_io_b_T_42 = mux(_alu_io_b_T_17, alu_io_b_MPORT_3, _alu_io_b_T_41) @[Mux.scala 101:16]
    node _alu_io_b_T_43 = mux(_alu_io_b_T_14, alu_io_b_MPORT_2, _alu_io_b_T_42) @[Mux.scala 101:16]
    node _alu_io_b_T_44 = mux(_alu_io_b_T_11, imm, _alu_io_b_T_43) @[Mux.scala 101:16]
    node _alu_io_b_T_45 = mux(_alu_io_b_T_8, imm, _alu_io_b_T_44) @[Mux.scala 101:16]
    node _alu_io_b_T_46 = mux(_alu_io_b_T_5, alu_io_b_MPORT_1, _alu_io_b_T_45) @[Mux.scala 101:16]
    node _alu_io_b_T_47 = mux(_alu_io_b_T_2, alu_io_b_MPORT, _alu_io_b_T_46) @[Mux.scala 101:16]
    alu.io.b <= _alu_io_b_T_47 @[Core.scala 127:18]
    node _dmem_raw_T = add(alu.io.out, UInt<1>("h0")) @[Core.scala 160:47]
    node _dmem_raw_T_1 = tail(_dmem_raw_T, 1) @[Core.scala 160:47]
    node _dmem_raw_T_2 = bits(_dmem_raw_T_1, 11, 0) @[Core.scala 160:35]
    read mport dmem_raw_MPORT = dmem[_dmem_raw_T_2], clock @[Core.scala 160:35]
    node _dmem_raw_T_3 = add(alu.io.out, UInt<1>("h1")) @[Core.scala 160:47]
    node _dmem_raw_T_4 = tail(_dmem_raw_T_3, 1) @[Core.scala 160:47]
    node _dmem_raw_T_5 = bits(_dmem_raw_T_4, 11, 0) @[Core.scala 160:35]
    read mport dmem_raw_MPORT_1 = dmem[_dmem_raw_T_5], clock @[Core.scala 160:35]
    node _dmem_raw_T_6 = add(alu.io.out, UInt<2>("h2")) @[Core.scala 160:47]
    node _dmem_raw_T_7 = tail(_dmem_raw_T_6, 1) @[Core.scala 160:47]
    node _dmem_raw_T_8 = bits(_dmem_raw_T_7, 11, 0) @[Core.scala 160:35]
    read mport dmem_raw_MPORT_2 = dmem[_dmem_raw_T_8], clock @[Core.scala 160:35]
    node _dmem_raw_T_9 = add(alu.io.out, UInt<2>("h3")) @[Core.scala 160:47]
    node _dmem_raw_T_10 = tail(_dmem_raw_T_9, 1) @[Core.scala 160:47]
    node _dmem_raw_T_11 = bits(_dmem_raw_T_10, 11, 0) @[Core.scala 160:35]
    read mport dmem_raw_MPORT_3 = dmem[_dmem_raw_T_11], clock @[Core.scala 160:35]
    node dmem_raw_lo = cat(dmem_raw_MPORT_1, dmem_raw_MPORT) @[Cat.scala 33:92]
    node dmem_raw_hi = cat(dmem_raw_MPORT_3, dmem_raw_MPORT_2) @[Cat.scala 33:92]
    node _dmem_raw_T_12 = cat(dmem_raw_hi, dmem_raw_lo) @[Cat.scala 33:92]
    dmem_raw <= _dmem_raw_T_12 @[Core.scala 159:12]
    node _T = eq(opcode, UInt<5>("h5")) @[Core.scala 163:16]
    node _T_1 = eq(opcode_sub, UInt<3>("h0")) @[Core.scala 163:45]
    node _T_2 = and(_T, _T_1) @[Core.scala 163:30]
    when _T_2 : @[Core.scala 163:60]
      node _T_3 = add(alu.io.out, UInt<1>("h0")) @[Core.scala 165:23]
      node _T_4 = tail(_T_3, 1) @[Core.scala 165:23]
      node _T_5 = bits(_T_4, 11, 0) @[Core.scala 165:11]
      infer mport MPORT = dmem[_T_5], clock @[Core.scala 165:11]
      infer mport MPORT_1 = regfile[rs2_s], clock @[Core.scala 165:40]
      node _T_6 = bits(MPORT_1, 7, 0) @[Core.scala 165:47]
      MPORT <= _T_6 @[Core.scala 165:30]
      node _T_7 = add(alu.io.out, UInt<1>("h1")) @[Core.scala 165:23]
      node _T_8 = tail(_T_7, 1) @[Core.scala 165:23]
      node _T_9 = bits(_T_8, 11, 0) @[Core.scala 165:11]
      infer mport MPORT_2 = dmem[_T_9], clock @[Core.scala 165:11]
      infer mport MPORT_3 = regfile[rs2_s], clock @[Core.scala 165:40]
      node _T_10 = bits(MPORT_3, 15, 8) @[Core.scala 165:47]
      MPORT_2 <= _T_10 @[Core.scala 165:30]
      node _T_11 = add(alu.io.out, UInt<2>("h2")) @[Core.scala 165:23]
      node _T_12 = tail(_T_11, 1) @[Core.scala 165:23]
      node _T_13 = bits(_T_12, 11, 0) @[Core.scala 165:11]
      infer mport MPORT_4 = dmem[_T_13], clock @[Core.scala 165:11]
      infer mport MPORT_5 = regfile[rs2_s], clock @[Core.scala 165:40]
      node _T_14 = bits(MPORT_5, 23, 16) @[Core.scala 165:47]
      MPORT_4 <= _T_14 @[Core.scala 165:30]
      node _T_15 = add(alu.io.out, UInt<2>("h3")) @[Core.scala 165:23]
      node _T_16 = tail(_T_15, 1) @[Core.scala 165:23]
      node _T_17 = bits(_T_16, 11, 0) @[Core.scala 165:11]
      infer mport MPORT_6 = dmem[_T_17], clock @[Core.scala 165:11]
      infer mport MPORT_7 = regfile[rs2_s], clock @[Core.scala 165:40]
      node _T_18 = bits(MPORT_7, 31, 24) @[Core.scala 165:47]
      MPORT_6 <= _T_18 @[Core.scala 165:30]
    infer mport MPORT_8 = regfile[rd], clock @[Core.scala 169:10]
    node _T_19 = eq(rd, UInt<1>("h0")) @[Core.scala 170:9]
    node _T_20 = eq(opcode, UInt<5>("h3")) @[Core.scala 172:13]
    node _T_21 = eq(opcode_sub, UInt<3>("h0")) @[Core.scala 172:40]
    node _T_22 = and(_T_20, _T_21) @[Core.scala 172:26]
    node _T_23 = add(pc, UInt<3>("h6")) @[Core.scala 172:61]
    node _T_24 = tail(_T_23, 1) @[Core.scala 172:61]
    node _T_25 = eq(opcode, UInt<5>("h3")) @[Core.scala 173:13]
    node _T_26 = eq(opcode_sub, UInt<3>("h1")) @[Core.scala 173:40]
    node _T_27 = and(_T_25, _T_26) @[Core.scala 173:26]
    node _T_28 = add(pc, UInt<3>("h6")) @[Core.scala 173:61]
    node _T_29 = tail(_T_28, 1) @[Core.scala 173:61]
    node _T_30 = eq(opcode, UInt<5>("h3")) @[Core.scala 174:13]
    node _T_31 = eq(opcode_sub, UInt<3>("h2")) @[Core.scala 174:40]
    node _T_32 = and(_T_30, _T_31) @[Core.scala 174:26]
    node _T_33 = add(pc, UInt<3>("h6")) @[Core.scala 174:61]
    node _T_34 = tail(_T_33, 1) @[Core.scala 174:61]
    node _T_35 = eq(opcode, UInt<5>("h3")) @[Core.scala 175:13]
    node _T_36 = eq(opcode_sub, UInt<3>("h3")) @[Core.scala 175:40]
    node _T_37 = and(_T_35, _T_36) @[Core.scala 175:26]
    node _T_38 = add(pc, UInt<3>("h6")) @[Core.scala 175:61]
    node _T_39 = tail(_T_38, 1) @[Core.scala 175:61]
    node _T_40 = eq(opcode, UInt<5>("h4")) @[Core.scala 177:13]
    node _T_41 = eq(opcode_sub, UInt<3>("h0")) @[Core.scala 177:40]
    node _T_42 = and(_T_40, _T_41) @[Core.scala 177:26]
    node _T_43 = eq(opcode, UInt<5>("h5")) @[Core.scala 178:13]
    node _T_44 = eq(opcode_sub, UInt<3>("h0")) @[Core.scala 178:40]
    node _T_45 = and(_T_43, _T_44) @[Core.scala 178:26]
    infer mport MPORT_9 = regfile[rd], clock @[Core.scala 178:65]
    node _T_46 = eq(opcode, UInt<5>("h6")) @[Core.scala 180:13]
    node _T_47 = eq(opcode_sub, UInt<3>("h0")) @[Core.scala 180:40]
    node _T_48 = and(_T_46, _T_47) @[Core.scala 180:26]
    node _T_49 = and(_T_48, ioBus.io.din.valid) @[Core.scala 180:53]
    node _T_50 = eq(opcode, UInt<5>("h6")) @[Core.scala 181:13]
    node _T_51 = eq(opcode_sub, UInt<3>("h0")) @[Core.scala 181:40]
    node _T_52 = and(_T_50, _T_51) @[Core.scala 181:26]
    node _T_53 = eq(ioBus.io.din.valid, UInt<1>("h0")) @[Core.scala 181:56]
    node _T_54 = and(_T_52, _T_53) @[Core.scala 181:53]
    infer mport MPORT_10 = regfile[rd], clock @[Core.scala 181:88]
    node _T_55 = eq(opcode, UInt<5>("h6")) @[Core.scala 182:13]
    node _T_56 = eq(opcode_sub, UInt<3>("h1")) @[Core.scala 182:40]
    node _T_57 = and(_T_55, _T_56) @[Core.scala 182:26]
    infer mport MPORT_11 = regfile[rd], clock @[Core.scala 182:65]
    node _T_58 = mux(_T_57, MPORT_11, alu.io.out) @[Mux.scala 101:16]
    node _T_59 = mux(_T_54, MPORT_10, _T_58) @[Mux.scala 101:16]
    node _T_60 = mux(_T_49, ioBus.io.din.bits, _T_59) @[Mux.scala 101:16]
    node _T_61 = mux(_T_45, MPORT_9, _T_60) @[Mux.scala 101:16]
    node _T_62 = mux(_T_42, dmem_raw, _T_61) @[Mux.scala 101:16]
    node _T_63 = mux(_T_37, _T_39, _T_62) @[Mux.scala 101:16]
    node _T_64 = mux(_T_32, _T_34, _T_63) @[Mux.scala 101:16]
    node _T_65 = mux(_T_27, _T_29, _T_64) @[Mux.scala 101:16]
    node _T_66 = mux(_T_22, _T_24, _T_65) @[Mux.scala 101:16]
    node _T_67 = mux(_T_19, UInt<32>("h0"), _T_66) @[Mux.scala 101:16]
    MPORT_8 <= _T_67 @[Core.scala 169:18]
    ioBus.io.devId <= alu.io.out @[Core.scala 186:18]
    node _ioBus_io_din_ready_T = eq(opcode, UInt<5>("h6")) @[Core.scala 188:33]
    node _ioBus_io_din_ready_T_1 = eq(opcode_sub, UInt<3>("h0")) @[Core.scala 188:60]
    node _ioBus_io_din_ready_T_2 = and(_ioBus_io_din_ready_T, _ioBus_io_din_ready_T_1) @[Core.scala 188:46]
    node _ioBus_io_din_ready_T_3 = and(_ioBus_io_din_ready_T_2, ioBus.io.din.valid) @[Core.scala 188:74]
    ioBus.io.din.ready <= _ioBus_io_din_ready_T_3 @[Core.scala 188:22]
    node _ioBus_io_dout_valid_T = eq(opcode, UInt<5>("h6")) @[Core.scala 190:34]
    node _ioBus_io_dout_valid_T_1 = eq(opcode_sub, UInt<3>("h1")) @[Core.scala 190:61]
    node _ioBus_io_dout_valid_T_2 = and(_ioBus_io_dout_valid_T, _ioBus_io_dout_valid_T_1) @[Core.scala 190:47]
    ioBus.io.dout.valid <= _ioBus_io_dout_valid_T_2 @[Core.scala 190:23]
    infer mport ioBus_io_dout_bits_MPORT = regfile[rs2_s], clock @[Core.scala 191:32]
    ioBus.io.dout.bits <= ioBus_io_dout_bits_MPORT @[Core.scala 191:22]
    node _T_68 = bits(reset, 0, 0) @[Core.scala 199:9]
    node _T_69 = eq(_T_68, UInt<1>("h0")) @[Core.scala 199:9]
    when _T_69 : @[Core.scala 199:9]
      printf(clock, UInt<1>("h1"), "pc_fetching : 0x%x\n", pc_fetching) : printf @[Core.scala 199:9]
    node _T_70 = bits(reset, 0, 0) @[Core.scala 200:9]
    node _T_71 = eq(_T_70, UInt<1>("h0")) @[Core.scala 200:9]
    when _T_71 : @[Core.scala 200:9]
      printf(clock, UInt<1>("h1"), "pc          : 0x%x\n", pc) : printf_1 @[Core.scala 200:9]
    node _T_72 = bits(reset, 0, 0) @[Core.scala 201:9]
    node _T_73 = eq(_T_72, UInt<1>("h0")) @[Core.scala 201:9]
    when _T_73 : @[Core.scala 201:9]
      printf(clock, UInt<1>("h1"), "instr       : 0x%x\n", instr) : printf_2 @[Core.scala 201:9]
    node _T_74 = bits(reset, 0, 0) @[Core.scala 202:9]
    node _T_75 = eq(_T_74, UInt<1>("h0")) @[Core.scala 202:9]
    when _T_75 : @[Core.scala 202:9]
      printf(clock, UInt<1>("h1"), "opcode      : 0x%x\n", opcode) : printf_3 @[Core.scala 202:9]
    node _T_76 = bits(reset, 0, 0) @[Core.scala 203:9]
    node _T_77 = eq(_T_76, UInt<1>("h0")) @[Core.scala 203:9]
    when _T_77 : @[Core.scala 203:9]
      printf(clock, UInt<1>("h1"), "opcode_sub  : 0x%x\n", opcode_sub) : printf_4 @[Core.scala 203:9]
    node _T_78 = bits(reset, 0, 0) @[Core.scala 204:9]
    node _T_79 = eq(_T_78, UInt<1>("h0")) @[Core.scala 204:9]
    when _T_79 : @[Core.scala 204:9]
      printf(clock, UInt<1>("h1"), "rs1         : 0x%x\n", rs1) : printf_5 @[Core.scala 204:9]
    node _T_80 = bits(reset, 0, 0) @[Core.scala 205:9]
    node _T_81 = eq(_T_80, UInt<1>("h0")) @[Core.scala 205:9]
    when _T_81 : @[Core.scala 205:9]
      printf(clock, UInt<1>("h1"), "rs1_i       : 0x%x\n", rs1_i) : printf_6 @[Core.scala 205:9]
    infer mport MPORT_12 = regfile[rs1], clock @[Core.scala 206:49]
    node _T_82 = bits(reset, 0, 0) @[Core.scala 206:9]
    node _T_83 = eq(_T_82, UInt<1>("h0")) @[Core.scala 206:9]
    when _T_83 : @[Core.scala 206:9]
      printf(clock, UInt<1>("h1"), "regfile(rs1): 0x%x\n", MPORT_12) : printf_7 @[Core.scala 206:9]
    infer mport MPORT_13 = regfile[rs2], clock @[Core.scala 207:49]
    node _T_84 = bits(reset, 0, 0) @[Core.scala 207:9]
    node _T_85 = eq(_T_84, UInt<1>("h0")) @[Core.scala 207:9]
    when _T_85 : @[Core.scala 207:9]
      printf(clock, UInt<1>("h1"), "regfile(rs2): 0x%x\n", MPORT_13) : printf_8 @[Core.scala 207:9]
    node _T_86 = bits(reset, 0, 0) @[Core.scala 208:9]
    node _T_87 = eq(_T_86, UInt<1>("h0")) @[Core.scala 208:9]
    when _T_87 : @[Core.scala 208:9]
      printf(clock, UInt<1>("h1"), "imm         : 0x%x\n", imm) : printf_9 @[Core.scala 208:9]
    node _T_88 = bits(reset, 0, 0) @[Core.scala 209:9]
    node _T_89 = eq(_T_88, UInt<1>("h0")) @[Core.scala 209:9]
    when _T_89 : @[Core.scala 209:9]
      printf(clock, UInt<1>("h1"), "imm_r_sext  : 0x%x\n", imm_r_sext) : printf_10 @[Core.scala 209:9]
    node _T_90 = bits(reset, 0, 0) @[Core.scala 210:9]
    node _T_91 = eq(_T_90, UInt<1>("h0")) @[Core.scala 210:9]
    when _T_91 : @[Core.scala 210:9]
      printf(clock, UInt<1>("h1"), "command     : 0x%x\n", command) : printf_11 @[Core.scala 210:9]
    node _T_92 = bits(reset, 0, 0) @[Core.scala 211:9]
    node _T_93 = eq(_T_92, UInt<1>("h0")) @[Core.scala 211:9]
    when _T_93 : @[Core.scala 211:9]
      printf(clock, UInt<1>("h1"), "alu.io.a    : 0x%x\n", alu.io.a) : printf_12 @[Core.scala 211:9]
    node _T_94 = bits(reset, 0, 0) @[Core.scala 212:9]
    node _T_95 = eq(_T_94, UInt<1>("h0")) @[Core.scala 212:9]
    when _T_95 : @[Core.scala 212:9]
      printf(clock, UInt<1>("h1"), "alu.io.b    : 0x%x\n", alu.io.b) : printf_13 @[Core.scala 212:9]
    node _T_96 = bits(reset, 0, 0) @[Core.scala 213:9]
    node _T_97 = eq(_T_96, UInt<1>("h0")) @[Core.scala 213:9]
    when _T_97 : @[Core.scala 213:9]
      printf(clock, UInt<1>("h1"), "alu.io.out  : 0x%x\n", alu.io.out) : printf_14 @[Core.scala 213:9]
    node _T_98 = add(pc, imm_r_sext) @[Core.scala 214:44]
    node _T_99 = tail(_T_98, 1) @[Core.scala 214:44]
    node _T_100 = bits(reset, 0, 0) @[Core.scala 214:9]
    node _T_101 = eq(_T_100, UInt<1>("h0")) @[Core.scala 214:9]
    when _T_101 : @[Core.scala 214:9]
      printf(clock, UInt<1>("h1"), "pc+sext(imm): 0x%x\n", _T_99) : printf_15 @[Core.scala 214:9]
    node _T_102 = bits(reset, 0, 0) @[Core.scala 215:9]
    node _T_103 = eq(_T_102, UInt<1>("h0")) @[Core.scala 215:9]
    when _T_103 : @[Core.scala 215:9]
      printf(clock, UInt<1>("h1"), "zero        : 0x%x\n", alu.io.zero) : printf_16 @[Core.scala 215:9]
    infer mport MPORT_14 = regfile[UInt<1>("h0")], clock @[Core.scala 217:52]
    node _T_104 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_105 = eq(_T_104, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_105 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(0)  : 0x%x\n", MPORT_14) : printf_17 @[Core.scala 217:11]
    infer mport MPORT_15 = regfile[UInt<1>("h1")], clock @[Core.scala 217:52]
    node _T_106 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_107 = eq(_T_106, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_107 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(1)  : 0x%x\n", MPORT_15) : printf_18 @[Core.scala 217:11]
    infer mport MPORT_16 = regfile[UInt<2>("h2")], clock @[Core.scala 217:52]
    node _T_108 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_109 = eq(_T_108, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_109 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(2)  : 0x%x\n", MPORT_16) : printf_19 @[Core.scala 217:11]
    infer mport MPORT_17 = regfile[UInt<2>("h3")], clock @[Core.scala 217:52]
    node _T_110 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_111 = eq(_T_110, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_111 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(3)  : 0x%x\n", MPORT_17) : printf_20 @[Core.scala 217:11]
    infer mport MPORT_18 = regfile[UInt<3>("h4")], clock @[Core.scala 217:52]
    node _T_112 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_113 = eq(_T_112, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_113 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(4)  : 0x%x\n", MPORT_18) : printf_21 @[Core.scala 217:11]
    infer mport MPORT_19 = regfile[UInt<3>("h5")], clock @[Core.scala 217:52]
    node _T_114 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_115 = eq(_T_114, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_115 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(5)  : 0x%x\n", MPORT_19) : printf_22 @[Core.scala 217:11]
    infer mport MPORT_20 = regfile[UInt<3>("h6")], clock @[Core.scala 217:52]
    node _T_116 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_117 = eq(_T_116, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_117 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(6)  : 0x%x\n", MPORT_20) : printf_23 @[Core.scala 217:11]
    infer mport MPORT_21 = regfile[UInt<3>("h7")], clock @[Core.scala 217:52]
    node _T_118 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_119 = eq(_T_118, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_119 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(7)  : 0x%x\n", MPORT_21) : printf_24 @[Core.scala 217:11]
    infer mport MPORT_22 = regfile[UInt<4>("h8")], clock @[Core.scala 217:52]
    node _T_120 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_121 = eq(_T_120, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_121 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(8)  : 0x%x\n", MPORT_22) : printf_25 @[Core.scala 217:11]
    infer mport MPORT_23 = regfile[UInt<4>("h9")], clock @[Core.scala 217:52]
    node _T_122 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_123 = eq(_T_122, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_123 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(9)  : 0x%x\n", MPORT_23) : printf_26 @[Core.scala 217:11]
    infer mport MPORT_24 = regfile[UInt<4>("ha")], clock @[Core.scala 217:52]
    node _T_124 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_125 = eq(_T_124, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_125 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(10)  : 0x%x\n", MPORT_24) : printf_27 @[Core.scala 217:11]
    infer mport MPORT_25 = regfile[UInt<4>("hb")], clock @[Core.scala 217:52]
    node _T_126 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_127 = eq(_T_126, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_127 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(11)  : 0x%x\n", MPORT_25) : printf_28 @[Core.scala 217:11]
    infer mport MPORT_26 = regfile[UInt<4>("hc")], clock @[Core.scala 217:52]
    node _T_128 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_129 = eq(_T_128, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_129 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(12)  : 0x%x\n", MPORT_26) : printf_29 @[Core.scala 217:11]
    infer mport MPORT_27 = regfile[UInt<4>("hd")], clock @[Core.scala 217:52]
    node _T_130 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_131 = eq(_T_130, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_131 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(13)  : 0x%x\n", MPORT_27) : printf_30 @[Core.scala 217:11]
    infer mport MPORT_28 = regfile[UInt<4>("he")], clock @[Core.scala 217:52]
    node _T_132 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_133 = eq(_T_132, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_133 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(14)  : 0x%x\n", MPORT_28) : printf_31 @[Core.scala 217:11]
    infer mport MPORT_29 = regfile[UInt<4>("hf")], clock @[Core.scala 217:52]
    node _T_134 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_135 = eq(_T_134, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_135 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(15)  : 0x%x\n", MPORT_29) : printf_32 @[Core.scala 217:11]
    infer mport MPORT_30 = regfile[UInt<5>("h10")], clock @[Core.scala 217:52]
    node _T_136 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_137 = eq(_T_136, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_137 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(16)  : 0x%x\n", MPORT_30) : printf_33 @[Core.scala 217:11]
    infer mport MPORT_31 = regfile[UInt<5>("h11")], clock @[Core.scala 217:52]
    node _T_138 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_139 = eq(_T_138, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_139 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(17)  : 0x%x\n", MPORT_31) : printf_34 @[Core.scala 217:11]
    infer mport MPORT_32 = regfile[UInt<5>("h12")], clock @[Core.scala 217:52]
    node _T_140 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_141 = eq(_T_140, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_141 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(18)  : 0x%x\n", MPORT_32) : printf_35 @[Core.scala 217:11]
    infer mport MPORT_33 = regfile[UInt<5>("h13")], clock @[Core.scala 217:52]
    node _T_142 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_143 = eq(_T_142, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_143 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(19)  : 0x%x\n", MPORT_33) : printf_36 @[Core.scala 217:11]
    infer mport MPORT_34 = regfile[UInt<5>("h14")], clock @[Core.scala 217:52]
    node _T_144 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_145 = eq(_T_144, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_145 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(20)  : 0x%x\n", MPORT_34) : printf_37 @[Core.scala 217:11]
    infer mport MPORT_35 = regfile[UInt<5>("h15")], clock @[Core.scala 217:52]
    node _T_146 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_147 = eq(_T_146, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_147 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(21)  : 0x%x\n", MPORT_35) : printf_38 @[Core.scala 217:11]
    infer mport MPORT_36 = regfile[UInt<5>("h16")], clock @[Core.scala 217:52]
    node _T_148 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_149 = eq(_T_148, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_149 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(22)  : 0x%x\n", MPORT_36) : printf_39 @[Core.scala 217:11]
    infer mport MPORT_37 = regfile[UInt<5>("h17")], clock @[Core.scala 217:52]
    node _T_150 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_151 = eq(_T_150, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_151 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(23)  : 0x%x\n", MPORT_37) : printf_40 @[Core.scala 217:11]
    infer mport MPORT_38 = regfile[UInt<5>("h18")], clock @[Core.scala 217:52]
    node _T_152 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_153 = eq(_T_152, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_153 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(24)  : 0x%x\n", MPORT_38) : printf_41 @[Core.scala 217:11]
    infer mport MPORT_39 = regfile[UInt<5>("h19")], clock @[Core.scala 217:52]
    node _T_154 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_155 = eq(_T_154, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_155 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(25)  : 0x%x\n", MPORT_39) : printf_42 @[Core.scala 217:11]
    infer mport MPORT_40 = regfile[UInt<5>("h1a")], clock @[Core.scala 217:52]
    node _T_156 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_157 = eq(_T_156, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_157 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(26)  : 0x%x\n", MPORT_40) : printf_43 @[Core.scala 217:11]
    infer mport MPORT_41 = regfile[UInt<5>("h1b")], clock @[Core.scala 217:52]
    node _T_158 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_159 = eq(_T_158, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_159 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(27)  : 0x%x\n", MPORT_41) : printf_44 @[Core.scala 217:11]
    infer mport MPORT_42 = regfile[UInt<5>("h1c")], clock @[Core.scala 217:52]
    node _T_160 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_161 = eq(_T_160, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_161 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(28)  : 0x%x\n", MPORT_42) : printf_45 @[Core.scala 217:11]
    infer mport MPORT_43 = regfile[UInt<5>("h1d")], clock @[Core.scala 217:52]
    node _T_162 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_163 = eq(_T_162, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_163 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(29)  : 0x%x\n", MPORT_43) : printf_46 @[Core.scala 217:11]
    infer mport MPORT_44 = regfile[UInt<5>("h1e")], clock @[Core.scala 217:52]
    node _T_164 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_165 = eq(_T_164, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_165 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(30)  : 0x%x\n", MPORT_44) : printf_47 @[Core.scala 217:11]
    infer mport MPORT_45 = regfile[UInt<5>("h1f")], clock @[Core.scala 217:52]
    node _T_166 = bits(reset, 0, 0) @[Core.scala 217:11]
    node _T_167 = eq(_T_166, UInt<1>("h0")) @[Core.scala 217:11]
    when _T_167 : @[Core.scala 217:11]
      printf(clock, UInt<1>("h1"), "regfile(31)  : 0x%x\n", MPORT_45) : printf_48 @[Core.scala 217:11]
    read mport MPORT_46 = dmem[UInt<1>("h0")], clock @[Core.scala 221:34]
    read mport MPORT_47 = dmem[UInt<1>("h1")], clock @[Core.scala 221:34]
    read mport MPORT_48 = dmem[UInt<2>("h2")], clock @[Core.scala 221:34]
    read mport MPORT_49 = dmem[UInt<2>("h3")], clock @[Core.scala 221:34]
    node lo = cat(MPORT_47, MPORT_46) @[Cat.scala 33:92]
    node hi = cat(MPORT_49, MPORT_48) @[Cat.scala 33:92]
    node _T_168 = cat(hi, lo) @[Cat.scala 33:92]
    node _T_169 = bits(reset, 0, 0) @[Core.scala 220:11]
    node _T_170 = eq(_T_169, UInt<1>("h0")) @[Core.scala 220:11]
    when _T_170 : @[Core.scala 220:11]
      printf(clock, UInt<1>("h1"), "dmem(%d) : 0x%x\n", UInt<1>("h0"), _T_168) : printf_49 @[Core.scala 220:11]
    read mport MPORT_50 = dmem[UInt<3>("h4")], clock @[Core.scala 221:34]
    read mport MPORT_51 = dmem[UInt<3>("h5")], clock @[Core.scala 221:34]
    read mport MPORT_52 = dmem[UInt<3>("h6")], clock @[Core.scala 221:34]
    read mport MPORT_53 = dmem[UInt<3>("h7")], clock @[Core.scala 221:34]
    node lo_1 = cat(MPORT_51, MPORT_50) @[Cat.scala 33:92]
    node hi_1 = cat(MPORT_53, MPORT_52) @[Cat.scala 33:92]
    node _T_171 = cat(hi_1, lo_1) @[Cat.scala 33:92]
    node _T_172 = bits(reset, 0, 0) @[Core.scala 220:11]
    node _T_173 = eq(_T_172, UInt<1>("h0")) @[Core.scala 220:11]
    when _T_173 : @[Core.scala 220:11]
      printf(clock, UInt<1>("h1"), "dmem(%d) : 0x%x\n", UInt<3>("h4"), _T_171) : printf_50 @[Core.scala 220:11]
    read mport MPORT_54 = dmem[UInt<4>("h8")], clock @[Core.scala 221:34]
    read mport MPORT_55 = dmem[UInt<4>("h9")], clock @[Core.scala 221:34]
    read mport MPORT_56 = dmem[UInt<4>("ha")], clock @[Core.scala 221:34]
    read mport MPORT_57 = dmem[UInt<4>("hb")], clock @[Core.scala 221:34]
    node lo_2 = cat(MPORT_55, MPORT_54) @[Cat.scala 33:92]
    node hi_2 = cat(MPORT_57, MPORT_56) @[Cat.scala 33:92]
    node _T_174 = cat(hi_2, lo_2) @[Cat.scala 33:92]
    node _T_175 = bits(reset, 0, 0) @[Core.scala 220:11]
    node _T_176 = eq(_T_175, UInt<1>("h0")) @[Core.scala 220:11]
    when _T_176 : @[Core.scala 220:11]
      printf(clock, UInt<1>("h1"), "dmem(%d) : 0x%x\n", UInt<4>("h8"), _T_174) : printf_51 @[Core.scala 220:11]
    read mport MPORT_58 = dmem[UInt<4>("hc")], clock @[Core.scala 221:34]
    read mport MPORT_59 = dmem[UInt<4>("hd")], clock @[Core.scala 221:34]
    read mport MPORT_60 = dmem[UInt<4>("he")], clock @[Core.scala 221:34]
    read mport MPORT_61 = dmem[UInt<4>("hf")], clock @[Core.scala 221:34]
    node lo_3 = cat(MPORT_59, MPORT_58) @[Cat.scala 33:92]
    node hi_3 = cat(MPORT_61, MPORT_60) @[Cat.scala 33:92]
    node _T_177 = cat(hi_3, lo_3) @[Cat.scala 33:92]
    node _T_178 = bits(reset, 0, 0) @[Core.scala 220:11]
    node _T_179 = eq(_T_178, UInt<1>("h0")) @[Core.scala 220:11]
    when _T_179 : @[Core.scala 220:11]
      printf(clock, UInt<1>("h1"), "dmem(%d) : 0x%x\n", UInt<4>("hc"), _T_177) : printf_52 @[Core.scala 220:11]
    read mport MPORT_62 = dmem[UInt<5>("h10")], clock @[Core.scala 221:34]
    read mport MPORT_63 = dmem[UInt<5>("h11")], clock @[Core.scala 221:34]
    read mport MPORT_64 = dmem[UInt<5>("h12")], clock @[Core.scala 221:34]
    read mport MPORT_65 = dmem[UInt<5>("h13")], clock @[Core.scala 221:34]
    node lo_4 = cat(MPORT_63, MPORT_62) @[Cat.scala 33:92]
    node hi_4 = cat(MPORT_65, MPORT_64) @[Cat.scala 33:92]
    node _T_180 = cat(hi_4, lo_4) @[Cat.scala 33:92]
    node _T_181 = bits(reset, 0, 0) @[Core.scala 220:11]
    node _T_182 = eq(_T_181, UInt<1>("h0")) @[Core.scala 220:11]
    when _T_182 : @[Core.scala 220:11]
      printf(clock, UInt<1>("h1"), "dmem(%d) : 0x%x\n", UInt<5>("h10"), _T_180) : printf_53 @[Core.scala 220:11]
    read mport MPORT_66 = dmem[UInt<5>("h14")], clock @[Core.scala 221:34]
    read mport MPORT_67 = dmem[UInt<5>("h15")], clock @[Core.scala 221:34]
    read mport MPORT_68 = dmem[UInt<5>("h16")], clock @[Core.scala 221:34]
    read mport MPORT_69 = dmem[UInt<5>("h17")], clock @[Core.scala 221:34]
    node lo_5 = cat(MPORT_67, MPORT_66) @[Cat.scala 33:92]
    node hi_5 = cat(MPORT_69, MPORT_68) @[Cat.scala 33:92]
    node _T_183 = cat(hi_5, lo_5) @[Cat.scala 33:92]
    node _T_184 = bits(reset, 0, 0) @[Core.scala 220:11]
    node _T_185 = eq(_T_184, UInt<1>("h0")) @[Core.scala 220:11]
    when _T_185 : @[Core.scala 220:11]
      printf(clock, UInt<1>("h1"), "dmem(%d) : 0x%x\n", UInt<5>("h14"), _T_183) : printf_54 @[Core.scala 220:11]
    read mport MPORT_70 = dmem[UInt<5>("h18")], clock @[Core.scala 221:34]
    read mport MPORT_71 = dmem[UInt<5>("h19")], clock @[Core.scala 221:34]
    read mport MPORT_72 = dmem[UInt<5>("h1a")], clock @[Core.scala 221:34]
    read mport MPORT_73 = dmem[UInt<5>("h1b")], clock @[Core.scala 221:34]
    node lo_6 = cat(MPORT_71, MPORT_70) @[Cat.scala 33:92]
    node hi_6 = cat(MPORT_73, MPORT_72) @[Cat.scala 33:92]
    node _T_186 = cat(hi_6, lo_6) @[Cat.scala 33:92]
    node _T_187 = bits(reset, 0, 0) @[Core.scala 220:11]
    node _T_188 = eq(_T_187, UInt<1>("h0")) @[Core.scala 220:11]
    when _T_188 : @[Core.scala 220:11]
      printf(clock, UInt<1>("h1"), "dmem(%d) : 0x%x\n", UInt<5>("h18"), _T_186) : printf_55 @[Core.scala 220:11]
    read mport MPORT_74 = dmem[UInt<5>("h1c")], clock @[Core.scala 221:34]
    read mport MPORT_75 = dmem[UInt<5>("h1d")], clock @[Core.scala 221:34]
    read mport MPORT_76 = dmem[UInt<5>("h1e")], clock @[Core.scala 221:34]
    read mport MPORT_77 = dmem[UInt<5>("h1f")], clock @[Core.scala 221:34]
    node lo_7 = cat(MPORT_75, MPORT_74) @[Cat.scala 33:92]
    node hi_7 = cat(MPORT_77, MPORT_76) @[Cat.scala 33:92]
    node _T_189 = cat(hi_7, lo_7) @[Cat.scala 33:92]
    node _T_190 = bits(reset, 0, 0) @[Core.scala 220:11]
    node _T_191 = eq(_T_190, UInt<1>("h0")) @[Core.scala 220:11]
    when _T_191 : @[Core.scala 220:11]
      printf(clock, UInt<1>("h1"), "dmem(%d) : 0x%x\n", UInt<5>("h1c"), _T_189) : printf_56 @[Core.scala 220:11]
    node _T_192 = bits(reset, 0, 0) @[Core.scala 225:9]
    node _T_193 = eq(_T_192, UInt<1>("h0")) @[Core.scala 225:9]
    when _T_193 : @[Core.scala 225:9]
      printf(clock, UInt<1>("h1"), "----------------------\n") : printf_57 @[Core.scala 225:9]


