# Mem (lw)
lw r6 = 0(r0)           # r6 = mem[r0+0] = 0xcafebabe
lw r7 = 4(r0)           # r7 = mem[r0+4] = 0xdeadbeef

# Mem (sw)
sw 0(r0) = r7           # mem[r0+0] = r7 = 0xdeadbeaf
sw 4(r0) = r6           # mem[r0+4] = r6 = 0xcafebabe

# Fibonacci
addi r5, r5, 1          # r5 = r5 + 1
r1: 1 1 2 3 5 8...
r5: 1 2 3 4 5...
addi r0, r0, 0          # r0 = 0
addi r1, r1, 1          # r1 = 1

add  r2, r0, r1         # r2 = r0 + r1
addi r0, r1, 0          # r0 = r1 + 0
addi r1, r2, 0          # r1 = r2 + 0
addi r5, r5, 1          # r5 = r5 + 1
beq  r4, r3, r3, -24    # if(r3 == r3) { r4 = pc + 6; pc = pc - 24;}
beq  <rd>, <rs1>, <rs2>, <imm> # 

addi
  {bits:  5, name: 'opcode'},
  {bits:  3, name: 'opcode_sub'},
  {bits:  5, name: 'rd'},
  {bits:  3, name: 'rs1'},
  {bits: 32, name: 'imm'},

add
  {bits:  5, name: 'opcode'},
  {bits:  3, name: 'opcode_sub'},
  {bits:  5, name: 'rd'},
  {bits:  5, name: 'rs1'},
  {bits:  5, name: 'rs2'},
  {bits: 25, name: 'reserved'},

sw
  {bits:  5, name: 'opcode'},
  {bits:  3, name: 'opcode_sub'},
  {bits:  5, name: 'rs2'},
  {bits:  3, name: 'rs1'},
  {bits: 32, name: 'imm'},

47bit                                              0bit
00000000_00000000_00000000_00000000_000_00110_000_00100
00_00_00_00_06_04
00000000_00000000_00000000_00000100_000_00111_000_00100
00_00_00_04_07_04
00000000_00000000_00000000_00000000_000_00111_000_00101
00_00_00_00_07_05
00000000_00000000_00000000_00000100_000_00110_000_00101
00_00_00_04_06_05
00000000_00000000_00000000_00000001_101_00101_001_00010
00_00_00_01_a5_22
00000000_00000000_00000000_00000000_000_00000_001_00010
00_00_00_00_00_22
00000000_00000000_00000000_00000001_001_00001_001_00010
00_00_00_01_21_22
0000000000_0000000000_00000_00001_00000_00010_001_00001
00_00_00_04_02_21
00000000_00000000_00000000_00000000_001_00000_001_00010
00_00_00_00_20_22
00000000_00000000_00000000_00000000_010_00001_001_00010
00_00_00_00_41_22
00000000_00000000_00000000_00000001_101_00101_001_00010
00_00_00_01_a5_22
1111111111_1111111111_01000_00011_00011_00100_000_00011
FF_FF_F4_0C_64_03

addi r0, r0, 0    # r0 = 0
addi r1, r1, 1    # r1 = 1
add  r2, r0, r1   # r2 = r0 + r1 = 0 + 1 = 1
add  r3, r1, r2   # r3 = r1 + r2 = 1 + 1 = 2
add  r4, r2, r3   # r4 = r2 + r3 = 1 + 2 = 3
add  r5, r3, r4   # r5 = r3 + r4 = 2 + 3 = 5
47bit                                              0bit
00000000_00000000_00000000_00000000_000_00000_001_00010
00_00_00_00_00_22
00000000_00000000_00000000_00000001_001_00001_001_00010
00_00_00_01_21_22
0000000000_0000000000_00000_00001_00000_00010_001_00001
00_00_00_04_02_21
0000000000_0000000000_00000_00010_00001_00011_001_00001
00_00_00_08_23_21
0000000000_0000000000_00000_00011_00010_00100_001_00001
00_00_00_0c_44_21
0000000000_0000000000_00000_00100_00011_00101_001_00001
00_00_00_10_65_21

# 22, 21, 01, 00, 00, 00 : リトルエンディアン
# 00, 00, 00, 01, 21, 22 : ビッグエンディアン

def fmt(inst):
    inst = inst.replace("_", "")   # "000_101" -> "000101"
    tmp1 = int(inst, 2)            # "000101" -> 5
    tmp2 = hex(tmp1)               # 0x5
    return tmp2
    # return hex(int(inst, 2))

